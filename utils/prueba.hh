  dom(GecodeSpace& home, CtVar x, int n);
  dom(GecodeSpace& home, const std::vector<CtVar>& x, int n);
  dom(GecodeSpace& home, CtVar x, int l, int m);
  dom(GecodeSpace& home, const std::vector<CtVar>& x, int l, int m);
  dom(GecodeSpace& home, CtVar x, const std::vector<int>& s);
  dom(GecodeSpace& home, const std::vector<CtVar>& x, const std::vector<int>& s);
  dom(GecodeSpace& home, CtVar x, int n, CtVar b);
  dom(GecodeSpace& home, CtVar x, int l, int m, BoolVar b);
  dom(GecodeSpace& home, CtVar x, const std::vector<int>& s, BoolVar b);
  rel(GecodeSpace& home, CtVar x0, IntRelType r, CtVar x1);
  rel(GecodeSpace& home, const std::vector<CtVar>& x, IntRelType r, CtVar y);
  rel(GecodeSpace& home, CtVar x, IntRelType r, int c);
  rel(GecodeSpace& home, const std::vector<CtVar>& x, IntRelType r, int c);
  rel(GecodeSpace& home, CtVar x0, IntRelType r, CtVar x1, BoolVar b);
  rel(GecodeSpace& home, CtVar x, IntRelType r, int c, BoolVar b);
  rel(GecodeSpace& home, const std::vector<CtVar>& x, IntRelType r);
  rel(GecodeSpace& home, const std::vector<CtVar>& x, IntRelType r, const std::vector<CtVar>& y);
  rel(GecodeSpace& home, BoolVar x0, IntRelType r, BoolVar x1);
  rel(GecodeSpace& home, BoolVar x0, IntRelType r, BoolVar x1, BoolVar b);
  rel(GecodeSpace& home, const std::vector<CtVar>& x, IntRelType r, BoolVar y);
  rel(GecodeSpace& home, BoolVar x, IntRelType r, int n);
  rel(GecodeSpace& home, BoolVar x, IntRelType r, int n, BoolVar b);
  rel(GecodeSpace& home, const std::vector<CtVar>& x, IntRelType r, int n);
  rel(GecodeSpace& home, const std::vector<CtVar>& x, IntRelType r, const std::vector<CtVar>& y);
  rel(GecodeSpace& home, const std::vector<CtVar>& x, IntRelType r);
  rel(GecodeSpace& home, BoolVar x0, BoolOpType o, BoolVar x1, BoolVar x2);
  rel(GecodeSpace& home, BoolVar x0, BoolOpType o, BoolVar x1, int n);
  rel(GecodeSpace& home, BoolOpType o, const std::vector<CtVar>& x, BoolVar y);
  rel(GecodeSpace& home, BoolOpType o, const std::vector<CtVar>& x, int n);
  clause(GecodeSpace& home, BoolOpType o, const std::vector<CtVar>& x, const std::vector<CtVar>& y);
  clause(GecodeSpace& home, BoolOpType o, const std::vector<CtVar>& x, const std::vector<CtVar>& y);
  precede(GecodeSpace& home, const std::vector<CtVar>& x, int s, int t);
  precede(GecodeSpace& home, const std::vector<CtVar>& x, const IntArgs& c);
  member(GecodeSpace& home, const std::vector<CtVar>& x, CtVar y);
  member(GecodeSpace& home, const std::vector<CtVar>& x, BoolVar y);
  member(GecodeSpace& home, const std::vector<CtVar>& x, CtVar y, BoolVar b);
  member(GecodeSpace& home, const std::vector<CtVar>& x, BoolVar y, BoolVar b);
  element(GecodeSpace& home, IntSharedArray n, CtVar x0, CtVar x1);
  element(GecodeSpace& home, IntSharedArray n, CtVar x0, BoolVar x1);
  element(GecodeSpace& home, IntSharedArray n, CtVar x0, int x1);
  element(GecodeSpace& home, const std::vector<CtVar>& x, CtVar y0, CtVar y1);
  element(GecodeSpace& home, const std::vector<CtVar>& x, CtVar y0, int y1);
  element(GecodeSpace& home, const std::vector<CtVar>& x, CtVar y0, BoolVar y1);
  element(GecodeSpace& home, const std::vector<CtVar>& x, CtVar y0, int y1);
  element(GecodeSpace& home, IntSharedArray a, F  element(GecodeSpace& home, IntSharedArray a, F  element(GecodeSpace& home, const std::vector<CtVar>& a, F  element(GecodeSpace& home, const std::vector<CtVar>& a, F  distinct(GecodeSpace& home, const std::vector<CtVar>& x);
  distinct(GecodeSpace& home, const IntArgs& n, const std::vector<CtVar>& x);
  channel(GecodeSpace& home, const std::vector<CtVar>& x, const std::vector<CtVar>& y);
  channel(GecodeSpace& home, const std::vector<CtVar>& x, int xoff);
  channel(GecodeSpace& home, BoolVar x0, CtVar x1);
  channel(GecodeSpace& home, CtVar x0, BoolVar x1);
  channel(GecodeSpace& home, const std::vector<CtVar>& x, CtVar y, int o=0);
  sorted(GecodeSpace& home, const std::vector<CtVar>& x, const std::vector<CtVar>& y);
  sorted(GecodeSpace& home, const std::vector<CtVar>& x, const std::vector<CtVar>& y);
  count(GecodeSpace& home, const std::vector<CtVar>& x, int n, IntRelType r, int m);
  count(GecodeSpace& home, const std::vector<CtVar>& x, const std::vector<int>& y, IntRelType r, int m);
  count(GecodeSpace& home, const std::vector<CtVar>& x, CtVar y, IntRelType r, int m);
  count(GecodeSpace& home, const std::vector<CtVar>& x, const IntArgs& y, IntRelType r, int m);
  count(GecodeSpace& home, const std::vector<CtVar>& x, int n, IntRelType r, CtVar z);
  count(GecodeSpace& home, const std::vector<CtVar>& x, const std::vector<int>& y, IntRelType r, CtVar z);
  count(GecodeSpace& home, const std::vector<CtVar>& x, CtVar y, IntRelType r, CtVar z);
  count(GecodeSpace& home, const std::vector<CtVar>& x, const IntArgs& y, IntRelType r, CtVar z);
  count(GecodeSpace& home, const std::vector<CtVar>& x, const std::vector<CtVar>& c);
  count(GecodeSpace& home, const std::vector<CtVar>& x, const IntSetArgs& c);
  count(GecodeSpace& home, const std::vector<CtVar>& x);
  count(GecodeSpace& home, const std::vector<CtVar>& x);
  count(GecodeSpace& home, const std::vector<CtVar>& x);
  nvalues(GecodeSpace& home, const std::vector<CtVar>& x, IntRelType r, int y);
  nvalues(GecodeSpace& home, const std::vector<CtVar>& x, IntRelType r, CtVar y);
  nvalues(GecodeSpace& home, const std::vector<CtVar>& x, IntRelType r, int y);
  nvalues(GecodeSpace& home, const std::vector<CtVar>& x, IntRelType r, CtVar y);
  sequence(GecodeSpace& home, const std::vector<CtVar>& x, const std::vector<int>& s, F  sequence(GecodeSpace& home, const std::vector<CtVar>& x, const std::vector<int>& s, F  extensional(GecodeSpace& home, const std::vector<CtVar>& x, DFA d);
  extensional(GecodeSpace& home, const std::vector<CtVar>& x, DFA d);
  extensional(GecodeSpace& home, const std::vector<CtVar>& x, const TupleSet& t);
  extensional(GecodeSpace& home, const std::vector<CtVar>& x, const TupleSet& t);
  min(GecodeSpace& home, CtVar x0, CtVar x1, CtVar x2);
  min(GecodeSpace& home, const std::vector<CtVar>& x, CtVar y);
  max(GecodeSpace& home, CtVar x0, CtVar x1, CtVar x2);
  max(GecodeSpace& home, const std::vector<CtVar>& x, CtVar y);
  abs(GecodeSpace& home, CtVar x0, CtVar x1);
  mult(GecodeSpace& home, CtVar x0, CtVar x1, CtVar x2);
  sqr(GecodeSpace& home, CtVar x0, CtVar x1);
  sqrt(GecodeSpace& home, CtVar x0, CtVar x1);
  divmod(GecodeSpace& home, CtVar x0, CtVar x1, CtVar x2, CtVar x3);
  div(GecodeSpace& home, CtVar x0, CtVar x1, CtVar x2);
  mod(GecodeSpace& home, CtVar x0, CtVar x1, CtVar x2);
  linear(GecodeSpace& home, const std::vector<CtVar>& x);
  linear(GecodeSpace& home, const std::vector<CtVar>& x);
  linear(GecodeSpace& home, const std::vector<CtVar>& x);
  linear(GecodeSpace& home, const std::vector<CtVar>& x);
  linear(GecodeSpace& home, const IntArgs& a, const std::vector<CtVar>& x);
  linear(GecodeSpace& home, const IntArgs& a, const std::vector<CtVar>& x);
  linear(GecodeSpace& home, const IntArgs& a, const std::vector<CtVar>& x);
  linear(GecodeSpace& home, const IntArgs& a, const std::vector<CtVar>& x);
  linear(GecodeSpace& home, const std::vector<CtVar>& x);
  linear(GecodeSpace& home, const std::vector<CtVar>& x);
  linear(GecodeSpace& home, const std::vector<CtVar>& x);
  linear(GecodeSpace& home, const std::vector<CtVar>& x);
  linear(GecodeSpace& home, const IntArgs& a, const std::vector<CtVar>& x);
  linear(GecodeSpace& home, const IntArgs& a, const std::vector<CtVar>& x);
  linear(GecodeSpace& home, const IntArgs& a, const std::vector<CtVar>& x);
  linear(GecodeSpace& home, const IntArgs& a, const std::vector<CtVar>& x);
  binpacking(GecodeSpace& home, F  nooverlap(GecodeSpace& home, F  nooverlap(GecodeSpace& home, F  nooverlap(GecodeSpace& home, F  nooverlap(GecodeSpace& home, F  cumulatives(GecodeSpace& home, const std::vector<CtVar>& m);
  cumulatives(GecodeSpace& home, const IntArgs& m);
  cumulatives(GecodeSpace& home, const std::vector<CtVar>& m);
  cumulatives(GecodeSpace& home, const IntArgs& m);
  cumulatives(GecodeSpace& home, const std::vector<CtVar>& m);
  cumulatives(GecodeSpace& home, const IntArgs& m);
  cumulatives(GecodeSpace& home, const std::vector<CtVar>& m);
  cumulatives(GecodeSpace& home, const IntArgs& m);
  unary(GecodeSpace& home, const std::vector<CtVar>& s, const IntArgs& p);
  unary(GecodeSpace& home, const std::vector<CtVar>& s, const IntArgs& p, F  unary(GecodeSpace& home, const TaskTypeArgs& t);
  unary(GecodeSpace& home, const TaskTypeArgs& t);
  unary(GecodeSpace& home, const std::vector<CtVar>& s, const std::vector<CtVar>& p, F  unary(GecodeSpace& home, const std::vector<CtVar>& s, const std::vector<CtVar>& p);
  cumulative(GecodeSpace& home, int c, const TaskTypeArgs& t);
  cumulative(GecodeSpace& home, CtVar c, const TaskTypeArgs& t);
  cumulative(GecodeSpace& home, int c, const TaskTypeArgs& t);
  cumulative(GecodeSpace& home, CtVar c, const TaskTypeArgs& t);
  cumulative(GecodeSpace& home, int c, const std::vector<CtVar>& s, const IntArgs& p);
  cumulative(GecodeSpace& home, CtVar c, const std::vector<CtVar>& s, const IntArgs& p);
  cumulative(GecodeSpace& home, int c, const std::vector<CtVar>& s, const IntArgs& p, F  cumulative(GecodeSpace& home, CtVar c, const std::vector<CtVar>& s, const IntArgs& p, F  cumulative(GecodeSpace& home, int c, const std::vector<CtVar>& s, const std::vector<CtVar>& p);
  cumulative(GecodeSpace& home, CtVar c, const std::vector<CtVar>& s, const std::vector<CtVar>& p);
  cumulative(GecodeSpace& home, int c, const std::vector<CtVar>& s, const std::vector<CtVar>& p, F  cumulative(GecodeSpace& home, CtVar c, const std::vector<CtVar>& s, const std::vector<CtVar>& p, F  circuit(GecodeSpace& home, const std::vector<CtVar>& x);
  circuit(GecodeSpace& home, int offset, const std::vector<CtVar>& x);
  circuit(GecodeSpace& home, F  circuit(GecodeSpace& home, F  circuit(GecodeSpace& home, F  circuit(GecodeSpace& home, F  path(GecodeSpace& home, const std::vector<CtVar>& x, CtVar s, CtVar e);
  path(GecodeSpace& home, int offset, const std::vector<CtVar>& x, CtVar s, CtVar e);
  path(GecodeSpace& home, F  path(GecodeSpace& home, F  path(GecodeSpace& home, F  path(GecodeSpace& home, F  wait(GecodeSpace& home, CtVar x, void (*c)(Space& home));
  wait(GecodeSpace& home, BoolVar x, void (*c)(Space& home));
  wait(GecodeSpace& home, const std::vector<CtVar>& x, void (*c)(Space& home));
  wait(GecodeSpace& home, const std::vector<CtVar>& x, void (*c)(Space& home));
  when(GecodeSpace& home, BoolVar x, F  unshare(GecodeSpace& home, std::vector<CtVar>& x);
  unshare(GecodeSpace& home, std::vector<CtVar>& x);
  branch(GecodeSpace& home, const std::vector<CtVar>& x);
  branch(GecodeSpace& home, const std::vector<CtVar>& x);
  branch(GecodeSpace& home, CtVar x, IntValBranch vals);
  branch(GecodeSpace& home, const std::vector<CtVar>& x);
  branch(GecodeSpace& home, const std::vector<CtVar>& x);
  branch(GecodeSpace& home, BoolVar x, IntValBranch vals);
  assign(GecodeSpace& home, const std::vector<CtVar>& x, IntAssign vals);
  assign(GecodeSpace& home, CtVar x, IntAssign vals);
  assign(GecodeSpace& home, const std::vector<CtVar>& x, IntAssign vals);
  assign(GecodeSpace& home, BoolVar x, IntAssign vals,
